namespace Jans {
type Context = {"current_time": Long, "device_health": Set < String >, "fraud_indicators": Set < String >, "geolocation": Set < String >, "network": ipaddr, "network_type": String, "operating_system": String, "user_agent": String};
type Url = {"host": String, "path": String, "protocol": String};
type email_address = {"domain": String, "id": String};
entity Product = {"author": User, "organization"?: Organization, "productname"?: String};
entity TrustedIssuer = {"issuer_entity_id": Url};

entity Application = {"app_id": String, "name": String, "url": Url};
entity Role;
// Userinfo_token is unused currently
entity Userinfo_token = {"aud": String, "birthdate": String, "email": email_address, "exp": Long, "iat": Long, "iss": TrustedIssuer, "jti": String, "name": String, "phone_number": String, "role": Set < String >, "sub": String};
entity HTTP_Request = {"accept": Set < String >, "header": Set < String >, "url": Url};
entity Organization = {"orgId": String};

// active entities in example
entity Access_token = {"aud": String, "exp": Long, "iat": Long, "iss": TrustedIssuer, "jti": String, "scope": Set<String>};
entity id_token = {"acr": String, "amr": String, "aud": String, "exp": Long, "iat": Long, "iss": TrustedIssuer, "jti": String, "sub": String};

// user ID in JWT token is `sub` field
// 
entity User in [Role] = {"email"?: String, "organization_id"?: String, "phone_number"?: String, "sub"?: String, "supportsOrganizations_ids"?: Set <String>, "username"?: String};
entity Workload = {"client_id": String, "iss": TrustedIssuer, "name": String};
entity Ticket = {"author_user_id": String, "organization_id": String, "ticket_name": String};


action "Close" appliesTo {
  principal: [User],
  resource: [Ticket],
  context: {}
};
action "PATCH" appliesTo {
  principal: [Workload],
  resource: [HTTP_Request],
  context: Context
};
action "GET" appliesTo {
  principal: [Workload],
  resource: [HTTP_Request],
  context: Context
};
action "HEAD" appliesTo {
  principal: [Workload],
  resource: [HTTP_Request],
  context: Context
};
action "Read" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application, Ticket],
  context: Context
};
action "Share" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application],
  context: Context
};
action "Compare" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application],
  context: Context
};
action "Monitor" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application],
  context: Context
};
action "DELETE" appliesTo {
  principal: [Workload],
  resource: [HTTP_Request],
  context: Context
};
action "PUT" appliesTo {
  principal: [Workload],
  resource: [HTTP_Request],
  context: Context
};
action "Execute" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application],
  context: Context
};
action "Tag" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application],
  context: Context
};
action "Write" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application, Ticket, Product, User],
  context: {}
};
action "Search" appliesTo {
  principal: [User, Role, Workload],
  resource: [Application],
  context: Context
};
}

